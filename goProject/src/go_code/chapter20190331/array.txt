一、数组的定义
    var 数组名 [size]数据类型
    比如：var a [5]int

二、数组的内存布局：
1 intArr数组的地址其实就是数组第一个元素的地址，第二个元素的地址是第一个数组的地址加上数组数据类型占据的字节数
2 当我们定义完数组后，其实数组的各个元素有默认值 0
3 数组的地址可以通过数组名获取 &intArr

三、数组的for-range遍历
for index,value:=range array01{

}
说明：
1 第一个返回值index是数组的下标
2 第二个value是在该下标位置的值
3 他们都是仅在for循环内部可见的局部变量
4 遍历数组元素的时候，如果不想使用下标index，可以直接把下标index标位下划线_
5 index和value的名称不是固定的，即程序员可以自定义，一般命名为index和value

四、数组的使用注意事项和细节：
1 数组是多个相同类型数据的组合，一个数组一旦声明了，其长度是固定不变的。
2 var arr []int 如果发现中括号不写大小，这时arr就是一个slice切片，后面说
3 数组中的元素可以是任何数据类型，包括值类型和引用类型，但是不能混用
4 数组创建后如果没有赋值，有默认值
    数值类型数组；默认值0
    字符串数组；默认值为“”
    bool数组；默认为false
5 使用数组的步骤：1 声明数组并开辟空间  2给数组各个元素赋值（默认零值） 3使用数组
6 数组的下标是从0开始的
7 数组下包必须制定范围内使用，否则报panic，数组越界
8 go的数组是值类型，在默认情况下是值传递，因此会进行值拷贝。数组之间不会相互影响
9 如果想在其他函数中，去改原来的数组，可以使用引用传递（指针方式）
10 在go中，长度是数组类型的一部分，在传递函数参数时，需要考虑数组的长度















